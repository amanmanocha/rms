akka {
  loglevel = DEBUG

  actor {
    provider = cluster

    serialization-bindings {
      "com.rp.rms.CborSerializable" = jackson-cbor
    }
  }

  remote.artery {
    canonical.port = 0
    canonical.hostname = 127.0.0.1
  }

  cluster {
    seed-nodes = [
      "akka://RMS@127.0.0.1:2551",
      "akka://RMS@127.0.0.1:2552"
    ]

    roles = ["write-model", "read-model"]
  }

  persistence {
    journal.plugin = "akka.persistence.cassandra.journal"
    snapshot-store.plugin = "akka.persistence.cassandra.snapshot"
  }

}

akka.persistence.cassandra {
  events-by-tag {
    bucket-size = "Day"
    eventual-consistency-delay = 200ms
    flush-interval = 50ms
    pubsub-notification = on
    first-time-bucket = "20200115T00:00"
  }

  query {
    refresh-interval = 2s
  }

  journal.keyspace-autocreate = on
  journal.tables-autocreate = on
  snapshot.keyspace-autocreate = on
  snapshot.tables-autocreate = on
}

datastax-java-driver {
  advanced.reconnect-on-init = on
}


event-processor {
  id = "EventProcessor"
  keep-alive-interval = 2 seconds
  tag-name = "RMS"
  parallelism = 1
}

akka.cluster.singleton {
  singleton-name = "ReadStore"
  role = "read-model"

}

akka.cluster.singleton-proxy {
  singleton-name = ${akka.cluster.singleton.singleton-name}

  role = "read-model"

  singleton-identification-interval = 1s

  buffer-size = 1000
}

rms.http.port = 0
rms.askTimeout = 5 s


